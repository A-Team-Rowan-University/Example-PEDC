FORMAT: v1

# Webdev Api
All date times are in the format "2011-10-10T14:48:00.000+09:00" as described by https://tc39.github.io/ecma262/#sec-date-time-string-format


## Data Structures
### User
 + id: 42 (number, required)
 + first_name: Tim (string, required)
 + last_name: Hollabaugh (string, required)
 + banner_id: 916000000 (number, required)
 + email: hollabaut1@students.rowan.edu (string)

### New User
 + first_name: Tim (string, required)
 + last_name: Hollabaugh (string, required)
 + banner_id: 916000000 (number, required)
 + email: hollabaut1@students.rowan.edu (string)

### Partial User
 + first_name: Tim (string)
 + last_name: Hollabaugh (string)
 + banner_id: 916000000 (number)
 + email: hollabaut1@students.rowan.edu (string)

### Question
 + id: 12 (number, required)
 + title: What does the E-Stop do? (string, required)
 + correct_answer: Kills the power (string, required)
 + incorrect_answer_1: Gives you cake (string, required)
 + incorrect_answer_2: Makes mario happy (string, required)
 + incorrect_answer_3: Turns off the lights (string, required)

### Question Category
 + id: 34 (number, required)
 + title: Electrical Safety (string, required)
 + questions (array[Question], required)

### Question Category Number
 + number_of_questions: 2 (number, required) - The number of questions that should be choosed from this category
 + question_category: 1 (number, required) - The question category id

### Anonymous Question
 + id: 32 (number, required)
 + title: What does the E-Stop do? (string, required)
 + answer_1: Gives you cake (string, required)
 + answer_2: Makes mario happy (string, required)
 + answer_3: Turns off the lights (string, required)
 + answer_4: Kills the power (string, required)

### Question Response
+ id: 43 (number, required)
+ answer: Gives you cake (string, required)

### Test
 + id: 41 (number, required)
 + creator: 1 (number, required) - The UserID of the user that created the test
 + name: ECE Safety (string, required)
 + questions (array[Question Category Number], required)

### Test Session
 + id: 56 (number, required)
 + test: 41 (number, required) - The id for the test that this is from
 + name: ECE Safety #1 (string, required)
 + registrations (array[Test Session Registration], required)
 + registration_enabled: false (boolean, required)
 + opening_enabled: true (boolean, required)
 + submissions_enabled: true (boolean, required)

### Test Session Registration
 + id: 89 (number, required)
 + test_session: 56 (number, required) - The id of the test session this is for
 + taker: 1 (number, required) - The id of the user that took this test
 + registered: "2011-10-10T14:48:00.000+09:00" (string, required) The date and time the user registered for the test.
 + opened: "2011-10-10T14:50:00.000+09:00" (string) If the user opened the test, the date and time the user opened the test. Otherwise, null
 + sumbitted: "2011-10-10T14:55:00.000+09:00" (string) If the user submitted the test, the date and time the user sumbitted the test. Otherwise, null

# Group Users
The users

## Users [/api/v1/users/]
### List all users [GET]
This lists all the users in the system
 + Response 200 (application/json)
   + Attributes
     + users (array[User])

### Create a user [POST]
This creates a new user
 + Request (application/json)
   + Attributes (New User)
 + Response 200 (application/json)
   + Attributes (User)


## User [/api/v1/users/{user_id}]
 + Parameters
   + user_id: 1 (required, number)

### Get a single user [GET]
 + Response 200 (application/json)
   + Attributes (User, required)

### Update a user [POST]
 + Request (application/json)
   + Attributes (Partial User, required)
 + Response 204

### Delete a user [DELETE]
 + Response 204

# Group Safety Tests

## Question Categories [/api/v1/question_categories]

### List the question categories [GET]
This gets all the categories of questions
 + Response 200 (application/json)
   + Attributes
       + question_categories (array[Question Category])

## Tests [/api/v1/tests]

### List the all the tests [GET]
 + Response 200 (application/json)
   + Attributes
     + tests (array[Test])

### Create a new test [POST]
 + Request (application/json)
   + Attributes
     + name: ECE Safety (string, required)
     + questions (array[Question Category Number], required)
 + Response 204

## Test [/api/v1/tests/{test_id}]
 + Parameters
   + test_id: 1 (number, required)

### Get a single test [GET]
 + Response 200 (application/json)
   + Attributes (Test, required)

## Test Sessions [/api/v1/testsessions]

### List all the test sessions [GET]
 + Response 200 (application/json)
   + Attributes
     + test_sessions (array[Test Session])

### Create a new test session [POST]
 + Response 200 (application/json)
   + Attributes
     + test: 1 (number, required) - The test id that this is created from
     + name: ECE Safety #1 (string, required) - The name of the session

## Test Sessions for a given test [/api/v1/testsessions?test={test_id}]
### List all the test sessions for a given test [GET]
 + Response 200 (application/json)
   + Attributes
     + test_sessions (array[Test Session])

## Test Session [/api/v1/testsessions/{test_session_id}]
 + Parameters
   + test_session_id (required, number)

### Get a test session [GET]
 + Response 200 (application/json)
   + Attributes (Test Session, required)

## Test Session Questions [/api/v1/testsessions/{test_session_id}/questions]
 + Parameters
   + test_session_id (required, number)

### Get the questions for a test session [GET]
This marks the test as opened
 + Response 200 (application/json)
   + Attributes
     + questions (array[Anonymous Question], required)

## Test Session Submission [/api/v1/testsessions/{test_session_id}/submit]

### Submit a test [POST]
This marks the test as submitted
 + Request (application/json)
   + Attributes
     + questions (array[Question Response], required)
 + Response 204

